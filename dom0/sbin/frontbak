#!/bin/bash
# shellcheck disable=SC2086
set -feuo pipefail

usage() {
    printf '%s\n\n' "
   Usage: frontbak [--device=\"\$FB_DEVICE\"] \\
                   [--header=\"\$FB_HEADER\"] \\
                   [--format  or  <argument for 'btrfs send'>...]

          --format  is equivalent to  --format=overwrite
          --format=quick  is also available

 Example: # export FB_DEVICE=sys-usb:sda4 FB_HEADER=foo.img
          # FB_MKFS_ARGS='-O block-group-tree' frontbak --format
          # btrefsnap /snap1
          # frontbak  /snap1
          # btrefsnap /snap2
          # frontbak  /snap2 -p /snap1"

    exit "${1-1}"
}

format='' device=${FB_DEVICE-} header=${FB_HEADER-} send_args=()

for arg; do
    case "$arg" in
        --help|-h)  usage 0 ;;
        --format)   format=overwrite ;;
        --format=*) format=${arg#*=} ;;
        --device=*) device=${arg#*=} ;;
        --header=*) header=${arg#*=} ;;
        *)          send_args+=( "$arg" ) ;;
    esac
done

[[ $format =~ ^(overwrite|quick)?$ && $device && $header ]] || usage
[[ ! $format ]] || (( ! ${#send_args[@]} )) || usage


set -x

find_blkfront() {
    qubesd-query -e --fail -- dom0 admin.vm.device.block.List dom0 "$1+$2" |
    sed 's/ description=.*//' |
    grep -aEo ' frontend-dev=xvd[a-z]+\b' |
    cut -d = -f 2
}

device_vm=${device%%:*}
device_id=${device#*:}

if ! blkfront=$(find_blkfront "$device_vm" "$device_id"); then
    echo Y >/sys/module/block/parameters/no_part_scan
    qvm-block attach -- dom0 "$device"
    blkfront=$(find_blkfront "$device_vm" "$device_id")
fi

if qvm-run </dev/null --pass-io --filter-escape-chars --quiet -- "$device_vm" \
           bash -c "lsblk -dnro ROTA /dev/${device_id@Q} | grep -qx 1"; then
    # inherited by dm-crypt; Btrfs would add the ssd mount option if left at 0:
    echo 1 >/sys/block/"$blkfront"/queue/rotational
fi

if [[ $format ]]; then
    tmp=$header.tmp
    rm -f -- "$tmp"
    truncate -s 17M -- "$tmp"
    cryptsetup luksFormat --cipher=xchacha20,aes-adiantum-plain64 \
                          --sector-size=4096 ${FB_LUKSFORMAT_ARGS-} -- "$tmp"
    truncate -s 16M -- "$tmp"
    sync -- "$tmp"
    dd if="$tmp" of=/dev/"$blkfront" \
       bs=1M conv=nocreat,fdatasync iflag=fullblock
    mv -iT -- "$tmp" "$header"
    dirname -z -- "$header" | xargs -0 sync --
else
    untrusted_header=/run/frontbak/untrusted-header-$device.img
    head -c 16M /dev/"$blkfront" >"$untrusted_header"
    cmp -- "$header" "$untrusted_header"
    rm "$untrusted_header"
fi

uuid=$(cryptsetup luksUUID -- "$header")
map=frontbak-$uuid

sha256sum -- "$header"

if [[ ! -e /dev/mapper/$map ]]; then
    cryptsetup luksOpen --header="$header" ${FB_LUKSOPEN_ARGS-} \
                        /dev/"$blkfront" "$map"
fi

if [[ $format == overwrite ]]; then
    map_bytes=$(blockdev --getsize64 /dev/mapper/"$map")
    dd if=/dev/zero of=/dev/mapper/"$map" count="$map_bytes" \
       bs=1M conv=nocreat,fdatasync iflag=fullblock,count_bytes status=progress
fi

if [[ $format ]]; then
    mkfs.btrfs --checksum=xxhash ${FB_MKFS_ARGS-} /dev/mapper/"$map"
else
    mnt=/run/frontbak/mnt-$uuid

    if ! mountpoint -q "$mnt"; then
        mkdir -p "$mnt"
        mount -t btrfs ${FB_MOUNT_ARGS-} /dev/mapper/"$map" "$mnt"
    fi
fi

if (( ${#send_args[@]} )); then
    btrfs send --proto=0 --compressed-data "${send_args[@]}" |
    btrfs receive -v ${FB_RECEIVE_ARGS-} "$mnt"

    umount "$mnt"
    rmdir "$mnt"
fi

if [[ $format ]] || (( ${#send_args[@]} )); then
    cryptsetup close "$map"
    qvm-block detach -- dom0 "$device"
fi
